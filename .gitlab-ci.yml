image: gradle:jre11

variables:
  GIT_SUBMODULE_STRATEGY: normal
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  CI_RUN_ALL_JOBS: "true"

before_script:
  - cd web-tests

stages:
  - tests-api
  - tests-ui
  - custom-run

.template_tests_apishopper:
  resource_group: apiShopper
  stage: tests-api
  image: $CI_REGISTRY_IMAGE
  script:
    - echo $P_ENV
    - gradle clean build apiShopperRegress -Penv=$P_ENV -Pqase=true -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL -Purl_stf=$URL_STF -Purl_shp=$URL_SHP
  after_script:
    - cd web-tests
    - if [ $URL_STF == "stf-kraken.k-stage.sbermarket.tech" ]; then ALLURE_POSTFIX="preprod"; else ALLURE_POSTFIX="staging"; fi
    - echo $ALLURE_POSTFIX
    - bash ./report.sh api api-shopper-$ALLURE_POSTFIX
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/api/build/allure-results/
      - web-tests/api/logs/
    expire_in: 1 week
  allow_failure: false

.template_tests_apishopper_alone:
  only:
    refs:
      - master
    variables:
      - $API_SHOPPER_ALONE == 'true' && $CI_RUN_ALL_JOBS == 'false'
  allow_failure: false

.template_run_all_jobs_at_a_time_on_master:
  only:
    refs:
      - master
    variables:
      - $CI_RUN_ALL_JOBS == 'true'

CustomSuiteTestRun:
  allow_failure: false
  when: manual
  stage: custom-run
  image: $CI_REGISTRY_IMAGE
  script:
    - echo $P_ENV
    - echo $TEST_SET
    - echo $QASE
    - echo $BROWSER
    - echo $PROXY_IP
    - echo $PROXY_PORT
    - echo $PROXY_TIMEOUT
    - echo $URL_STF
    - echo $URL_SHP
    - gradle clean build $TEST_SET -Penv=$P_ENV -Pbrowser=$BROWSER -Pqase=$QASE -Purl_stf=$URL_STF -Purl_shp=$URL_SHP -Pkey=$ATST_APP_SECRET_KEY
  after_script:
    - cd web-tests
    - bash ./report.sh ui default
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/ui/build/allure-results/
      - web-tests/ui/logs/
    expire_in: 1 week


tests:ApiInstamart:
  only:
    variables:
      - $TEST_API_INSTAMART == 'true' && $CI_RUN_ALL_JOBS == 'false'
      - $CI_RUN_ALL_JOBS == 'true'
  extends: ".template_run_all_jobs_at_a_time_on_master"
  resource_group: apiInstamart:$URL_STF
  stage: tests-api
  image: $CI_REGISTRY_IMAGE
  script:
    - echo $P_ENV
    - echo $URL_STF
    - echo $URL_SHP
    - gradle clean build apiInstamartRegress -Penv=$P_ENV -Pqase=true -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL -Purl_stf=$URL_STF -Purl_shp=$URL_SHP
  after_script:
    - cd web-tests
    - if [ $URL_STF == "stf-kraken.k-stage.sbermarket.tech" ]; then ALLURE_POSTFIX="preprod"; else ALLURE_POSTFIX="staging"; fi
    - echo $ALLURE_POSTFIX
    - bash ./report.sh api api-instamart-$ALLURE_POSTFIX
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/api/build/allure-results/
      - web-tests/api/logs/
    expire_in: 1 week
  allow_failure: false

tests:preprodApiMetro:
  extends: ".template_run_all_jobs_at_a_time_on_master"
  resource_group: apiInstamart:$URL_STF
  when: manual
  stage: tests-api
  image: $CI_REGISTRY_IMAGE
  script:
    - gradle clean build apiInstamartRegress -Penv=metro-preprod -Pqase=true -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL
  after_script:
    - cd web-tests
    - bash ./report.sh api api-metro-preprod
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/api/build/allure-results/
      - web-tests/api/logs/
    expire_in: 1 week
  allow_failure: false

tests:prodApiInstamart:
  extends: ".template_run_all_jobs_at_a_time_on_master"
  resource_group: apiInstamartProd
  when: manual
  stage: tests-api
  image: $CI_REGISTRY_IMAGE
  script:
    - gradle clean build apiInstamartProduction -Pqase=true -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL
  after_script:
    - cd web-tests
    - bash ./report.sh api api-instamart-production
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/api/build/allure-results/
      - web-tests/api/logs/
    expire_in: 1 week
  allow_failure: false

tests:ApiShopper:
  only:
    variables:
      - $TEST_API_SHOPPER == 'true' && $CI_RUN_ALL_JOBS == 'false'
      - $CI_RUN_ALL_JOBS == 'true'
  extends:
    - ".template_tests_apishopper"
    - ".template_run_all_jobs_at_a_time_on_master"
  allow_failure: false

tests:ApiShopper:alone:
  extends:
    - ".template_tests_apishopper"
    - ".template_tests_apishopper_alone"
  allow_failure: false

tests:prodApiShopper:
  extends: ".template_run_all_jobs_at_a_time_on_master"
  resource_group: apiShopperProd
  when: manual
  stage: tests-api
  image: $CI_REGISTRY_IMAGE
  script:
    - gradle clean build apiShopperProduction -Pqase=true -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL
  after_script:
    - cd web-tests
    - bash ./report.sh api api-shopper-production
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/api/build/allure-results/
      - web-tests/api/logs/
    expire_in: 1 week
  allow_failure: false

tests:prodApiRetailer:
  extends: ".template_run_all_jobs_at_a_time_on_master"
  when: manual
  stage: tests-api
  image: $CI_REGISTRY_IMAGE
  script:
    - gradle clean build apiRetailerE2E -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL
  after_script:
    - cd web-tests
    - bash ./report.sh api api-retailer-e2e-production
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/api/build/allure-results/
      - web-tests/api/logs/
    expire_in: 1 week
  allow_failure: false

tests:surge:
  resource_group: testSurge
  only:
    variables:
      - $API_SURGE_ALONE == 'true' && $CI_RUN_ALL_JOBS == 'false'
  stage: tests-api
  image: $CI_REGISTRY_IMAGE
  script:
    - gradle clean build apiSurge -Pqase=true -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL
  after_script:
    - cd web-tests
    - bash ./report.sh api api-surge
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/api/build/allure-results/
      - web-tests/api/logs/
    expire_in: 1 week
  allow_failure: false

tests:UiSmoke:
  only:
    variables:
      - $TEST_UI_SMOKE == 'true' && $CI_RUN_ALL_JOBS == 'false'
      - $CI_RUN_ALL_JOBS == 'true'
  extends: ".template_run_all_jobs_at_a_time_on_master"
  stage: tests-ui
  needs:
    - "tests:ApiInstamart"
    - "tests:ApiShopper"
  resource_group: uismoke:$CI_COMMIT_REF_SLUG
  image: $CI_REGISTRY_IMAGE
  script:
    - echo $P_ENV
    - echo $URL_STF
    - echo $URL_SHP
    - gradle clean build sberUiSmoke -Penv=$P_ENV -Pqase=true -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL -Purl_stf=$URL_STF -Purl_shp=$URL_SHP
  after_script:
    - cd web-tests
    - bash ./report.sh ui ui-stf-smoke
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/ui/build/allure-results/
      - web-tests/ui/logs/
    expire_in: 1 week
  allow_failure: true

tests:UiRegress:
  extends: ".template_run_all_jobs_at_a_time_on_master"
  when: manual
  stage: tests-ui
  needs:
    - "tests:ApiInstamart"
    - "tests:ApiShopper"
  resource_group: uiregress:$CI_COMMIT_REF_SLUG
  image: $CI_REGISTRY_IMAGE
  script:
    - echo $P_ENV
    - echo $URL_STF
    - echo $URL_SHP
    - gradle clean build sberRegression -Penv=$P_ENV -Pqase=true -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL -Purl_stf=$URL_STF -Purl_shp=$URL_SHP
  after_script:
    - cd web-tests
    - bash ./report.sh ui ui-stf-regress
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/ui/build/allure-results/
      - web-tests/ui/logs/
    expire_in: 1 week
  allow_failure: true

tests:AdminUiSmoke:
  only:
    variables:
      - $TEST_ADMIN_UI_SMOKE == 'true' && $CI_RUN_ALL_JOBS == 'false'
      - $CI_RUN_ALL_JOBS == 'true'
  extends: ".template_run_all_jobs_at_a_time_on_master"
  stage: tests-ui
  needs:
    - "tests:ApiInstamart"
    - "tests:ApiShopper"
  resource_group: uismoke:$CI_COMMIT_REF_SLUG
  image: $CI_REGISTRY_IMAGE
  script:
    - echo $P_ENV
    - echo $URL_STF
    - echo $URL_SHP
    - gradle clean build adminUiSmokeReforged -Penv=$P_ENV -Pqase=true -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL -Purl_stf=$URL_STF -Purl_shp=$URL_SHP
  after_script:
    - cd web-tests
    - bash ./report.sh reforged ui-admin-smoke
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/reforged/build/allure-results/
      - web-tests/reforged/logs/
    expire_in: 1 week
  allow_failure: true

tests:prodUiSmoke:
  extends: ".template_run_all_jobs_at_a_time_on_master"
  when: manual
  stage: tests-ui
  needs:
    - "tests:ApiInstamart"
    - "tests:ApiShopper"
  resource_group: uismoke:$CI_COMMIT_REF_SLUG
  image: $CI_REGISTRY_IMAGE
  script:
    - gradle clean build uiSmokeProduction -Pqase=true -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL
  after_script:
    - cd web-tests
    - bash ./report.sh ui ui-smoke-production
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/ui/build/allure-results/
      - web-tests/ui/logs/
    expire_in: 1 week
  allow_failure: true

tests:AutoMRCheck:
  only:
    - merge_requests
  stage: tests-api
  image: $CI_REGISTRY_IMAGE
  script:
    - echo $P_ENV
    - gradle clean build AutoMRCheck -Penv=$P_ENV -Pqase=false -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL
  after_script:
    - cd web-tests
    - bash ./report.sh . default
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/api/build/allure-results/
      - web-tests/ui/build/allure-results/
      - web-tests/api/logs/
      - web-tests/ui/logs/
    expire_in: 1 week
  allow_failure: true

tests:Debug:
  rules:
    - if: '$CI_COMMIT_BRANCH != "master"'
      when: manual
      allow_failure: true
  stage: tests-api
  image: $CI_REGISTRY_IMAGE
  script:
    - echo $P_ENV
    - gradle clean build debug -Penv=$P_ENV -Pqase=true -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL
  after_script:
    - cd web-tests
    - bash ./report.sh debug
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/build/allure-results/
      - web-tests/logs/
    expire_in: 1 week
