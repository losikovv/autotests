include:
  - local: '/.gitlab-ci/api.yaml'
  - local: '/.gitlab-ci/shopper.yaml'
  - local: '/.gitlab-ci/grpc.yaml'
  - local: '/.gitlab-ci/ui.yaml'
  - local: '/.gitlab-ci/ui-tenant.yaml'
  - local: '/.gitlab-ci/kafka.yaml'
  - local: '/.gitlab-ci/on-demand.yaml'
  - local: '/.gitlab-ci/ui-submodules.yaml'

image: ${JAVA_IMAGE}

cache:
  key: ${CI_PROJECT_ID}
  paths:
    - web-tests/.gradle

variables:
  HARBOR_URL: "dreg.sbmt.io"
  HARBOR_PROJECT: "library/automag"
  HARBOR_APP: "kraken"
  DOCKER_BUILD_IMAGE: "${HARBOR_URL}/${HARBOR_PROJECT}/${HARBOR_APP}"
  DOCKER_BUILD_TAGS: "1.1"
  DOCKER_BUILD_TYPE: "testing"
  DOCKER_BUILD_CACHE_ENABLED: "true"
  DOCKER_PUSH_ENABLED: "true"
  DOCKER_MANIFEST_PATH: ${CI_PROJECT_DIR}/docker/Dockerfile
  RUNNER_IMAGE_REPO: "dreg.sbmt.io/library"
  RUNNER_IMAGE_NAME: "ci-tools"
  RUNNER_IMAGE_TAG: "v1.4.5"
  RUNNER_IMAGE_URL: "${RUNNER_IMAGE_REPO}/${RUNNER_IMAGE_NAME}:${RUNNER_IMAGE_TAG}"
  JAVA_IMAGE: ${HARBOR_URL}/${HARBOR_PROJECT}/${HARBOR_APP}:${DOCKER_BUILD_TAGS}
  GIT_SUBMODULE_STRATEGY: none
  GIT_DEPTH: 10
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  CI_RUN_ALL_JOBS: "true"
  ADMIN_URL:
    description: "ОБЯЗАТЕЛЬНО ДЛЯ UI ЗАПУСКА ТЕСТОВ АДМИНКИ! Нужно указывать полный url. Например: https://stf-kraken.k-stage.sbermarket.tech/"
  URL_STF_FRONT:
    description: "ОБЯЗАТЕЛЬНО ДЛЯ UI ЗАПУСКА! Нужно указывать полный url фронта. Например: https://next-default.k-stage.sbermarket.tech/"
  STF_FORWARD:
    description: "ОБЯЗАТЕЛЬНО ДЛЯ UI ЗАПУСКА! Значение для хедера/куки sbm-forward-feature-version-stf. Например: s-sb-stfkraken-sbermarket"
  B2B_FORWARD:
    description: "ОБЯЗАТЕЛЬНО ДЛЯ UI ЗАПУСКА ТЕСТОВ БИЗНЕС-ВИТРИНЫ! Значение для хедера/куки sbm-forward-feature-version-stf. Например: s-sb-stfkraken-smbusiness"
  URL_B2B_FRONT:
    description: "ОБЯЗАТЕЛЬНО ДЛЯ UI ЗАПУСКА ТЕСТОВ БИЗНЕС-ВИТРИНЫ! Нужно указывать полный url фронта b2b. Например: https://next-default-smbusiness.k-stage.sbermarket.tech/"
  HR_OPS_PARTNERS_URL:
    description: "ОБЯЗАТЕЛЬНО ДЛЯ UI ЗАПУСКА ТЕСТОВ HR OPS PARTNERS! Нужно указывать полный url. Например: https://paas-content-operations-partners-partners-front-d0674d34.gw-stage.sbmt.io/"
  URL_STF_BACKEND:
    description: "ОБЯЗАТЕЛЬНО ДЛЯ API ЗАПУСКА! Имя stf стейджа на котором запускаем тесты, например: stf-kraken.k-stage.sbermarket.tech"
  URL_SHP:
    description: "Имя shp стейджа на котором запускаем тесты. Для номерных стейджей можно пропустить"
  DEFAULT_SID:
    description: "Сид магазина на котором будут прогоняться тесты"
  CI_MODULE:
    description: "Название тестового модуля. Возможные варианты: ui-stf/ui-b2b/ui-admin/ui-partners/api/grpc/kafka"
  CI_GROUP:
    description: "Название группы тестов для запуска. Например: all-cart/all-order/api-instamart-smoke/api-instamart-regress"
  BFF_FORWARD:
    value: "default"
    description: "Значение для хедера sbm-forward-feature-version-paas-content-front-platform-stf-mobile-aggregator"

before_script:
  - export GRADLE_USER_HOME=$(pwd)/web-tests/.gradle
  - cd web-tests

stages:
  - mr
  - build
  - tests-api-shopper
  - tests-api
  - tests-api-ui
  - tests-api-service
  - generate-report
  - tests-ui-admin
  - tests-ui
  - tests-ui-tenant
  - custom-run

.template_only_branches:
  only:
    refs:
      - branches
  except:
    refs:
      - master
      - schedules
  when: manual

.template_prod:
  only:
    refs:
      - master
      - schedules
    variables:
      - $PRODUCTION == 'true'
  when: always

.template_schedule:
  only:
    refs:
      - schedules
    variables:
      - $REGRESSION == 'true'
  when: always

.template_run_all_jobs_at_a_time_on_master:
  only:
    refs:
      - master
    variables:
      - $CI_RUN_ALL_JOBS == 'true'
  except:
    refs:
      - schedules
      - web
      - pushes

.template_api_tests:
  stage: tests-api
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/api/build/allure-results/
      - web-tests/api/logs/
      - web-tests/api/build/reports/tests/
      - web-tests/api/swagger-coverage-output
      - web-tests/api/build/report.html
      - .env
    expire_in: 1 week
    reports:
      junit: web-tests/api/build/test-results/*/TEST-*.xml
      dotenv: .env
  allow_failure: false

.template_api_ui_tests:
  stage: tests-api-ui
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/api/build/allure-results/
      - web-tests/api/logs/
      - web-tests/api/build/reports/tests/
      - web-tests/api/swagger-coverage-output
      - web-tests/api/build/report.html
      - .env
    expire_in: 1 week
    reports:
      junit: web-tests/api/build/test-results/*/TEST-*.xml
      dotenv: .env
  allow_failure: false

.template_grpc_tests:
  stage: tests-api
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/grpc/build/allure-results/
      - web-tests/grpc/logs/
      - web-tests/grpc/build/reports/tests/
      - .env
    expire_in: 1 week
    reports:
      junit: web-tests/api/build/test-results/*/TEST-*.xml
      dotenv: .env
  allow_failure: false

.template_dispatch_tests:
  stage: tests-api
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/kafka/build/allure-results/
      - web-tests/kafka/logs/
      - web-tests/kafka/build/reports/tests/
      - .env
    expire_in: 1 week
    reports:
      junit: web-tests/api/build/test-results/*/TEST-*.xml
      dotenv: .env
  allow_failure: false

.template_ui_tests:
  resource_group: ui:$CI_COMMIT_REF_SLUG
  stage: tests-ui
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/reforged/build/allure-results/
      - web-tests/reforged/logs/
      - web-tests/reforged/build/reports/tests/
      - .env
    expire_in: 1 week
    reports:
      junit: web-tests/api/build/test-results/*/TEST-*.xml
      dotenv: .env
  allow_failure: false

java_gradle:build:
  extends: ".template_only_branches"
  stage: build
  image:
    name: "dreg.sbmt.io/instamart/base/dind:20.10.17-dind"
  tags:
    - stage-static
  before_script:
    - cd ../
    - echo -e "\e[0Ksection_start:`date +%s`:docker_login_step[collapsed=true]\r\e[0K\e[36;1mLogging in to the Docker registry\e[0m"
    - >
      echo -n "${BUILD_CONF_HARBOR_PWD}" |
      docker login
      --username "${BUILD_CONF_HARBOR_USER}"
      --password-stdin
      "${HARBOR_URL}"
    - echo -e "\e[0Ksection_end:`date +%s`:docker_login_step\r\e[0K"
  script:
    - build_docker_images.sh

tests:customRun:
  only:
    - web
  except:
    - schedules
    - merge_request
  resource_group: customRun:$CI_GROUP:$URL_STF_BACKEND
  stage: custom-run
  script:
    - echo $CI_GROUP
    - echo $CI_MODULE
    - echo $ADMIN_URL
    - echo $URL_STF_FRONT
    - echo $STF_FORWARD
    - echo $URL_B2B_FRONT
    - echo $B2B_FORWARD
    - echo $HR_OPS_PARTNERS_URL
    - echo $URL_STF_BACKEND
    - echo $URL_SHP
    - gradle --continue clean build ciRun copyAllAllureHistory copyAllLogs
  after_script:
    - bash ./report.sh . custom-run
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/build/allure-results/
      - web-tests/build/logs/
    expire_in: 1 week
  allow_failure: true

tests:AutoMRCheck:
  only:
    - merge_requests
  stage: mr
  script:
    - gradle --continue clean build :api:autoMr :reforged:autoMr allureCopyHistoryDir
  after_script:
    - bash ./report.sh . default
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/api/build/allure-results/
      - web-tests/api/logs/
      - web-tests/api/build/reports/tests/
      - web-tests/reforged/build/allure-results/
      - web-tests/reforged/logs/
      - web-tests/reforged/build/reports/tests/
    expire_in: 1 week
  allow_failure: true

tests:Debug:UI:
  extends: ".template_only_branches"
  stage: tests-ui
  script:
    - gradle clean build :reforged:debug
  after_script:
    - bash ./report.sh reforged debug
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/reforged/build/allure-results/
      - web-tests/reforged/build/reports/
      - web-tests/reforged/logs/
    expire_in: 1 week

tests:Debug:API:
  extends: ".template_only_branches"
  stage: tests-api
  script:
    - gradle clean build :api:debug
  after_script:
    - bash ./report.sh api debug
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/api/build/allure-results/
      - web-tests/api/build/reports/
      - web-tests/api/logs/
    expire_in: 1 week

qase:actualize:
  only:
    refs:
      - schedules
    variables:
      - $ACTUALIZATION == 'true'
  stage: tests-api
  script:
    - gradle clean build qaseActualize
  tags:
    - k8s-stage
  allow_failure: true

qase:cleanup:
  only:
    refs:
      - schedules
    variables:
      - $CLEANUP == 'true'
  stage: tests-api
  script:
    - gradle clean build qaseCleanup
  tags:
    - k8s-stage
  allow_failure: true

generate:data:
  only:
    refs:
      - schedules
    variables:
      - $GENERATE_DATA == 'true'
  stage: tests-api
  script:
    - gradle clean build generateData
  tags:
    - k8s-stage
  allow_failure: true

generate:dataUI:
  only:
    refs:
      - schedules
    variables:
      - $GENERATE_DATA_UI == 'true'
  stage: tests-api
  script:
    - gradle clean build generateDataUI
  tags:
    - k8s-stage
  allow_failure: true

generate:report:
  extends:
    - ".template_api_tests"
  only:
    variables:
      - $REGRESSION == 'true'
  stage: generate-report
  script:
    - if [ $URL_STF_BACKEND == "stf-kraken.k-stage.sbermarket.tech" ]; then ALLURE_POSTFIX="preprod"; else ALLURE_POSTFIX="staging"; fi
    - cd ..
    - bash ./generate-report.sh api api-instamart-$ALLURE_POSTFIX-regress
  when: always
