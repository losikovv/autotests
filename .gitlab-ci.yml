include:
  - local: '/.gitlab-ci/api.yaml'
  - local: '/.gitlab-ci/shopper.yaml'
  - local: '/.gitlab-ci/grpc.yaml'
  - local: '/.gitlab-ci/ui.yaml'
  - local: '/.gitlab-ci/ui-tenant.yaml'

image: gradle:jre11

variables:
  GIT_SUBMODULE_STRATEGY: normal
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  CI_RUN_ALL_JOBS: "true"

before_script:
  - cd web-tests

stages:
  - tests-api
  - tests-ui
  - custom-run

.template_tests_apishopper:
  resource_group: apiShopper:$URL_STF
  stage: tests-api
  image: $CI_REGISTRY_IMAGE
  script:
    - echo $P_ENV
    - gradle clean build apiShopperRegress -Penv=$P_ENV -Pqase=true -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL -Purl_stf=$URL_STF -Purl_shp=$URL_SHP
  after_script:
    - cd web-tests
    - if [ $URL_STF == "stf-kraken.k-stage.sbermarket.tech" ]; then ALLURE_POSTFIX="preprod"; else ALLURE_POSTFIX="staging"; fi
    - echo $ALLURE_POSTFIX
    - bash ./report.sh api api-shopper-$ALLURE_POSTFIX
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/api/build/allure-results/
      - web-tests/api/logs/
      - web-tests/api/build/reports/tests/
    expire_in: 1 week
  allow_failure: false

.template_tests_apishopper_alone:
  only:
    refs:
      - master
    variables:
      - $API_SHOPPER_ALONE == 'true' && $CI_RUN_ALL_JOBS == 'false'
  allow_failure: false

.template_run_all_jobs_at_a_time_on_master:
  only:
    refs:
      - master
    variables:
      - $CI_RUN_ALL_JOBS == 'true'

.template_ui_tests:
  resource_group: ui:$CI_COMMIT_REF_SLUG
    stage: tests-ui
    image: $CI_REGISTRY_IMAGE
    script:
      - echo $P_ENV
      - echo $URL_STF
      - echo $URL_SHP
    after_script:
      - cd web-tests
    tags:
      - k8s-stage
    artifacts:
      when: always
      paths:
        - web-tests/reforged/build/allure-results/
        - web-tests/reforged/logs/
        - web-tests/reforged/build/reports/tests/
      expire_in: 1 week
  allow_failure: false

CustomSuiteTestRun:
  only:
    variables:
      - $TEST_API_INSTAMART == 'false' && $CI_RUN_ALL_JOBS == 'false' && $API_SHOPPER_ALONE == 'false'
  allow_failure: true
  when: manual
  stage: custom-run
  image: $CI_REGISTRY_IMAGE
  script:
    - echo $P_ENV
    - echo $TEST_SET
    - echo $QASE
    - echo $BROWSER
    - echo $PROXY_IP
    - echo $PROXY_PORT
    - echo $PROXY_TIMEOUT
    - echo $URL_STF
    - echo $URL_SHP
    - gradle clean build $TEST_SET -Penv=$P_ENV -Pbrowser=$BROWSER -Pqase=$QASE -Purl_stf=$URL_STF -Purl_shp=$URL_SHP -Pkey=$ATST_APP_SECRET_KEY
  after_script:
    - cd web-tests
    - bash ./report.sh reforged default
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/reforged/build/allure-results/
      - web-tests/reforged/logs/
      - web-tests/reforged/build/reports/tests/
    expire_in: 1 week

tests:AutoMRCheck:
  only:
    - merge_requests
  stage: tests-api
  image: $CI_REGISTRY_IMAGE
  script:
    - echo $P_ENV
    - gradle clean build AutoMRCheck -Penv=$P_ENV -Pqase=false -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL
  after_script:
    - cd web-tests
    - bash ./report.sh . default
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/api/build/allure-results/
      - web-tests/api/logs/
      - web-tests/api/build/reports/tests/
      - web-tests/reforged/build/allure-results/
      - web-tests/reforged/logs/
      - web-tests/reforged/build/reports/tests/
    expire_in: 1 week
  allow_failure: true

tests:Debug:
  rules:
    - if: '$CI_COMMIT_BRANCH != "master"'
      when: manual
      allow_failure: true
  stage: tests-api
  image: $CI_REGISTRY_IMAGE
  script:
    - echo $P_ENV
    - gradle clean build debug -Penv=$P_ENV -Pqase=true -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL
  after_script:
    - cd web-tests
    - bash ./report.sh debug
  tags:
    - k8s-stage
  artifacts:
    when: always
    paths:
      - web-tests/build/allure-results/
      - web-tests/logs/
    expire_in: 1 week

qase:actualize:
  only:
    variables:
      - $TEST_API_INSTAMART == 'false' && $CI_RUN_ALL_JOBS == 'false' && $API_SHOPPER_ALONE == 'false'
  when: manual
  image: $CI_REGISTRY_IMAGE
  stage: tests-api
  script:
    - gradle clean build qaseActualize -Pkey=$ATST_APP_SECRET_KEY
  tags:
    - k8s-stage
  allow_failure: true
