ext.versions = [
        logback: '1.2.3',
        jsonSimple: '1.1.1',
        selenium: '3.8.1',
        testng: '7.4.0',
        restAssured: '4.3.1',
        allure: '2.13.8',
        aspectjweaver: '1.9.6',
        lombok: '1.18.20',
        konghq: '3.11.11',
        jackson: '2.12.3',
        okhttp: '4.9.0',
        webdrivermanager: '4.4.3',
        pgsqlJDBC: '42.1.4',
        kafkaClients: '2.8.1',
        kubernetesClient: '13.0.1',
        mysqlJDBC: '8.0.26',
        gRPC: '1.40.0',
        tomcatAnnotationsApi: '10.0.10',
        protobufProtoc: '3.17.3',
        commonLang: '3.12.0',
        javax: '1.3.2',
        kafkaProtobuf: '6.2.1'
]

ext.lib = [
        logback: "ch.qos.logback:logback-classic:$versions.logback",
        jsonSimple: "com.googlecode.json-simple:json-simple:$versions.jsonSimple",
        seleniumJava: "org.seleniumhq.selenium:selenium-java:$versions.selenium",
        testng: "org.testng:testng:$versions.testng",
        restAssured: "io.rest-assured:rest-assured:$versions.restAssured",
        restAssuredSchemaValidator: "io.rest-assured:json-schema-validator:$versions.restAssured",
        aspectjweaver: "org.aspectj:aspectjweaver:$versions.aspectjweaver",
        allureTestng: "io.qameta.allure:allure-testng:$versions.allure",
        allureJavaCommons: "io.qameta.allure:allure-java-commons:$versions.allure",
        allureRestAssuredReport: "io.qameta.allure:allure-rest-assured:$versions.allure",
        lombok: "org.projectlombok:lombok:$versions.lombok",
        konghq: "com.konghq:unirest-java:$versions.konghq",
        okhttp: "com.squareup.okhttp3:okhttp:$versions.okhttp",
        jackson: "com.fasterxml.jackson.core:jackson-databind:$versions.jackson",
        jacksonAnnotations: "com.fasterxml.jackson.core:jackson-annotations:$versions.jackson",
        webdrivermanager: "io.github.bonigarcia:webdrivermanager:$versions.webdrivermanager",
        pgsqlJDBC: "org.postgresql:postgresql:$versions.pgsqlJDBC",
        kafkaClients: "org.apache.kafka:kafka-clients:$versions.kafkaClients",
        kubernetesClient: "io.kubernetes:client-java:$versions.kubernetesClient",
        mysqlJDBC: "mysql:mysql-connector-java:$versions.mysqlJDBC",
        grpcNettyShaded: "io.grpc:grpc-netty-shaded:$versions.gRPC",
        grpcProtobuf: "io.grpc:grpc-protobuf:$versions.gRPC",
        grpcStub: "io.grpc:grpc-stub:$versions.gRPC",
        protocGenGrpcJava: "io.grpc:protoc-gen-grpc-java:$versions.gRPC",
        protobufProtoc: "com.google.protobuf:protoc:$versions.protobufProtoc",
        tomcatAnnotationsApi: "org.apache.tomcat:tomcat-annotations-api:$versions.tomcatAnnotationsApi",
        commonLang: "org.apache.commons:commons-lang3:$versions.commonLang",
        javax: "javax.annotation:javax.annotation-api:$versions.javax",
        kafkaProtobuf: "io.confluent:kafka-protobuf-serializer:$versions.kafkaProtobuf"
]
