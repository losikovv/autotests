// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: on_demand/shippingcalc.proto

package shippingcalc;

public interface PriceExplanationOrBuilder extends
    // @@protoc_insertion_point(interface_extends:shippingcalc.PriceExplanation)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Условия, которые было необходимо пройти, чтобы цена оказалась именно такой
   * </pre>
   *
   * <code>repeated .shippingcalc.PricePassedCondition passed_conditions = 1;</code>
   */
  java.util.List<shippingcalc.PricePassedCondition> 
      getPassedConditionsList();
  /**
   * <pre>
   * Условия, которые было необходимо пройти, чтобы цена оказалась именно такой
   * </pre>
   *
   * <code>repeated .shippingcalc.PricePassedCondition passed_conditions = 1;</code>
   */
  shippingcalc.PricePassedCondition getPassedConditions(int index);
  /**
   * <pre>
   * Условия, которые было необходимо пройти, чтобы цена оказалась именно такой
   * </pre>
   *
   * <code>repeated .shippingcalc.PricePassedCondition passed_conditions = 1;</code>
   */
  int getPassedConditionsCount();
  /**
   * <pre>
   * Условия, которые было необходимо пройти, чтобы цена оказалась именно такой
   * </pre>
   *
   * <code>repeated .shippingcalc.PricePassedCondition passed_conditions = 1;</code>
   */
  java.util.List<? extends shippingcalc.PricePassedConditionOrBuilder> 
      getPassedConditionsOrBuilderList();
  /**
   * <pre>
   * Условия, которые было необходимо пройти, чтобы цена оказалась именно такой
   * </pre>
   *
   * <code>repeated .shippingcalc.PricePassedCondition passed_conditions = 1;</code>
   */
  shippingcalc.PricePassedConditionOrBuilder getPassedConditionsOrBuilder(
      int index);

  /**
   * <pre>
   * Компоненты, из которых состоит цена. Сумма цен в компонентах не обязательно равна цене доставки.
   * </pre>
   *
   * <code>repeated .shippingcalc.PriceComponent price_components = 2;</code>
   */
  java.util.List<shippingcalc.PriceComponent> 
      getPriceComponentsList();
  /**
   * <pre>
   * Компоненты, из которых состоит цена. Сумма цен в компонентах не обязательно равна цене доставки.
   * </pre>
   *
   * <code>repeated .shippingcalc.PriceComponent price_components = 2;</code>
   */
  shippingcalc.PriceComponent getPriceComponents(int index);
  /**
   * <pre>
   * Компоненты, из которых состоит цена. Сумма цен в компонентах не обязательно равна цене доставки.
   * </pre>
   *
   * <code>repeated .shippingcalc.PriceComponent price_components = 2;</code>
   */
  int getPriceComponentsCount();
  /**
   * <pre>
   * Компоненты, из которых состоит цена. Сумма цен в компонентах не обязательно равна цене доставки.
   * </pre>
   *
   * <code>repeated .shippingcalc.PriceComponent price_components = 2;</code>
   */
  java.util.List<? extends shippingcalc.PriceComponentOrBuilder> 
      getPriceComponentsOrBuilderList();
  /**
   * <pre>
   * Компоненты, из которых состоит цена. Сумма цен в компонентах не обязательно равна цене доставки.
   * </pre>
   *
   * <code>repeated .shippingcalc.PriceComponent price_components = 2;</code>
   */
  shippingcalc.PriceComponentOrBuilder getPriceComponentsOrBuilder(
      int index);
}
