// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: on_demand/shippingcalc.proto

package shippingcalc;

/**
 * <pre>
 * Один интервал для surge
 * </pre>
 *
 * Protobuf type {@code shippingcalc.SurgeInterval}
 */
public final class SurgeInterval extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:shippingcalc.SurgeInterval)
    SurgeIntervalOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SurgeInterval.newBuilder() to construct.
  private SurgeInterval(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SurgeInterval() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SurgeInterval();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SurgeInterval(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 13: {

            leftBoundary_ = input.readFloat();
            break;
          }
          case 21: {

            rightBoundary_ = input.readFloat();
            break;
          }
          case 24: {

            priceAddition_ = input.readUInt64();
            break;
          }
          case 32: {

            percentAddition_ = input.readUInt64();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return shippingcalc.ShippingcalcOuterClass.internal_static_shippingcalc_SurgeInterval_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return shippingcalc.ShippingcalcOuterClass.internal_static_shippingcalc_SurgeInterval_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            shippingcalc.SurgeInterval.class, shippingcalc.SurgeInterval.Builder.class);
  }

  public static final int LEFT_BOUNDARY_FIELD_NUMBER = 1;
  private float leftBoundary_;
  /**
   * <pre>
   * Левая граница интервала, входит в диапазон
   * </pre>
   *
   * <code>float left_boundary = 1;</code>
   * @return The leftBoundary.
   */
  @java.lang.Override
  public float getLeftBoundary() {
    return leftBoundary_;
  }

  public static final int RIGHT_BOUNDARY_FIELD_NUMBER = 2;
  private float rightBoundary_;
  /**
   * <pre>
   * Правая граница интервала, не входит в диапазон
   * </pre>
   *
   * <code>float right_boundary = 2;</code>
   * @return The rightBoundary.
   */
  @java.lang.Override
  public float getRightBoundary() {
    return rightBoundary_;
  }

  public static final int PRICE_ADDITION_FIELD_NUMBER = 3;
  private long priceAddition_;
  /**
   * <pre>
   * Дополнительная наценка, напрямую добавленная к цене доставки
   * </pre>
   *
   * <code>uint64 price_addition = 3;</code>
   * @return The priceAddition.
   */
  @java.lang.Override
  public long getPriceAddition() {
    return priceAddition_;
  }

  public static final int PERCENT_ADDITION_FIELD_NUMBER = 4;
  private long percentAddition_;
  /**
   * <pre>
   * Дополнительная наценка, добавленный процент от цены доставки
   * </pre>
   *
   * <code>uint64 percent_addition = 4;</code>
   * @return The percentAddition.
   */
  @java.lang.Override
  public long getPercentAddition() {
    return percentAddition_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (leftBoundary_ != 0F) {
      output.writeFloat(1, leftBoundary_);
    }
    if (rightBoundary_ != 0F) {
      output.writeFloat(2, rightBoundary_);
    }
    if (priceAddition_ != 0L) {
      output.writeUInt64(3, priceAddition_);
    }
    if (percentAddition_ != 0L) {
      output.writeUInt64(4, percentAddition_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (leftBoundary_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(1, leftBoundary_);
    }
    if (rightBoundary_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(2, rightBoundary_);
    }
    if (priceAddition_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(3, priceAddition_);
    }
    if (percentAddition_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(4, percentAddition_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof shippingcalc.SurgeInterval)) {
      return super.equals(obj);
    }
    shippingcalc.SurgeInterval other = (shippingcalc.SurgeInterval) obj;

    if (java.lang.Float.floatToIntBits(getLeftBoundary())
        != java.lang.Float.floatToIntBits(
            other.getLeftBoundary())) return false;
    if (java.lang.Float.floatToIntBits(getRightBoundary())
        != java.lang.Float.floatToIntBits(
            other.getRightBoundary())) return false;
    if (getPriceAddition()
        != other.getPriceAddition()) return false;
    if (getPercentAddition()
        != other.getPercentAddition()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + LEFT_BOUNDARY_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getLeftBoundary());
    hash = (37 * hash) + RIGHT_BOUNDARY_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getRightBoundary());
    hash = (37 * hash) + PRICE_ADDITION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getPriceAddition());
    hash = (37 * hash) + PERCENT_ADDITION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getPercentAddition());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static shippingcalc.SurgeInterval parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static shippingcalc.SurgeInterval parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static shippingcalc.SurgeInterval parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static shippingcalc.SurgeInterval parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static shippingcalc.SurgeInterval parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static shippingcalc.SurgeInterval parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static shippingcalc.SurgeInterval parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static shippingcalc.SurgeInterval parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static shippingcalc.SurgeInterval parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static shippingcalc.SurgeInterval parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static shippingcalc.SurgeInterval parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static shippingcalc.SurgeInterval parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(shippingcalc.SurgeInterval prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Один интервал для surge
   * </pre>
   *
   * Protobuf type {@code shippingcalc.SurgeInterval}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:shippingcalc.SurgeInterval)
      shippingcalc.SurgeIntervalOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return shippingcalc.ShippingcalcOuterClass.internal_static_shippingcalc_SurgeInterval_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return shippingcalc.ShippingcalcOuterClass.internal_static_shippingcalc_SurgeInterval_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              shippingcalc.SurgeInterval.class, shippingcalc.SurgeInterval.Builder.class);
    }

    // Construct using shippingcalc.SurgeInterval.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      leftBoundary_ = 0F;

      rightBoundary_ = 0F;

      priceAddition_ = 0L;

      percentAddition_ = 0L;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return shippingcalc.ShippingcalcOuterClass.internal_static_shippingcalc_SurgeInterval_descriptor;
    }

    @java.lang.Override
    public shippingcalc.SurgeInterval getDefaultInstanceForType() {
      return shippingcalc.SurgeInterval.getDefaultInstance();
    }

    @java.lang.Override
    public shippingcalc.SurgeInterval build() {
      shippingcalc.SurgeInterval result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public shippingcalc.SurgeInterval buildPartial() {
      shippingcalc.SurgeInterval result = new shippingcalc.SurgeInterval(this);
      result.leftBoundary_ = leftBoundary_;
      result.rightBoundary_ = rightBoundary_;
      result.priceAddition_ = priceAddition_;
      result.percentAddition_ = percentAddition_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof shippingcalc.SurgeInterval) {
        return mergeFrom((shippingcalc.SurgeInterval)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(shippingcalc.SurgeInterval other) {
      if (other == shippingcalc.SurgeInterval.getDefaultInstance()) return this;
      if (other.getLeftBoundary() != 0F) {
        setLeftBoundary(other.getLeftBoundary());
      }
      if (other.getRightBoundary() != 0F) {
        setRightBoundary(other.getRightBoundary());
      }
      if (other.getPriceAddition() != 0L) {
        setPriceAddition(other.getPriceAddition());
      }
      if (other.getPercentAddition() != 0L) {
        setPercentAddition(other.getPercentAddition());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      shippingcalc.SurgeInterval parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (shippingcalc.SurgeInterval) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private float leftBoundary_ ;
    /**
     * <pre>
     * Левая граница интервала, входит в диапазон
     * </pre>
     *
     * <code>float left_boundary = 1;</code>
     * @return The leftBoundary.
     */
    @java.lang.Override
    public float getLeftBoundary() {
      return leftBoundary_;
    }
    /**
     * <pre>
     * Левая граница интервала, входит в диапазон
     * </pre>
     *
     * <code>float left_boundary = 1;</code>
     * @param value The leftBoundary to set.
     * @return This builder for chaining.
     */
    public Builder setLeftBoundary(float value) {
      
      leftBoundary_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Левая граница интервала, входит в диапазон
     * </pre>
     *
     * <code>float left_boundary = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearLeftBoundary() {
      
      leftBoundary_ = 0F;
      onChanged();
      return this;
    }

    private float rightBoundary_ ;
    /**
     * <pre>
     * Правая граница интервала, не входит в диапазон
     * </pre>
     *
     * <code>float right_boundary = 2;</code>
     * @return The rightBoundary.
     */
    @java.lang.Override
    public float getRightBoundary() {
      return rightBoundary_;
    }
    /**
     * <pre>
     * Правая граница интервала, не входит в диапазон
     * </pre>
     *
     * <code>float right_boundary = 2;</code>
     * @param value The rightBoundary to set.
     * @return This builder for chaining.
     */
    public Builder setRightBoundary(float value) {
      
      rightBoundary_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Правая граница интервала, не входит в диапазон
     * </pre>
     *
     * <code>float right_boundary = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearRightBoundary() {
      
      rightBoundary_ = 0F;
      onChanged();
      return this;
    }

    private long priceAddition_ ;
    /**
     * <pre>
     * Дополнительная наценка, напрямую добавленная к цене доставки
     * </pre>
     *
     * <code>uint64 price_addition = 3;</code>
     * @return The priceAddition.
     */
    @java.lang.Override
    public long getPriceAddition() {
      return priceAddition_;
    }
    /**
     * <pre>
     * Дополнительная наценка, напрямую добавленная к цене доставки
     * </pre>
     *
     * <code>uint64 price_addition = 3;</code>
     * @param value The priceAddition to set.
     * @return This builder for chaining.
     */
    public Builder setPriceAddition(long value) {
      
      priceAddition_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Дополнительная наценка, напрямую добавленная к цене доставки
     * </pre>
     *
     * <code>uint64 price_addition = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearPriceAddition() {
      
      priceAddition_ = 0L;
      onChanged();
      return this;
    }

    private long percentAddition_ ;
    /**
     * <pre>
     * Дополнительная наценка, добавленный процент от цены доставки
     * </pre>
     *
     * <code>uint64 percent_addition = 4;</code>
     * @return The percentAddition.
     */
    @java.lang.Override
    public long getPercentAddition() {
      return percentAddition_;
    }
    /**
     * <pre>
     * Дополнительная наценка, добавленный процент от цены доставки
     * </pre>
     *
     * <code>uint64 percent_addition = 4;</code>
     * @param value The percentAddition to set.
     * @return This builder for chaining.
     */
    public Builder setPercentAddition(long value) {
      
      percentAddition_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Дополнительная наценка, добавленный процент от цены доставки
     * </pre>
     *
     * <code>uint64 percent_addition = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearPercentAddition() {
      
      percentAddition_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:shippingcalc.SurgeInterval)
  }

  // @@protoc_insertion_point(class_scope:shippingcalc.SurgeInterval)
  private static final shippingcalc.SurgeInterval DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new shippingcalc.SurgeInterval();
  }

  public static shippingcalc.SurgeInterval getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SurgeInterval>
      PARSER = new com.google.protobuf.AbstractParser<SurgeInterval>() {
    @java.lang.Override
    public SurgeInterval parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SurgeInterval(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SurgeInterval> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SurgeInterval> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public shippingcalc.SurgeInterval getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

