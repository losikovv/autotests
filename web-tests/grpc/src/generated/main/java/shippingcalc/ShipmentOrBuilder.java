// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: on_demand/shippingcalc.proto

package shippingcalc;

public interface ShipmentOrBuilder extends
    // @@protoc_insertion_point(interface_extends:shippingcalc.Shipment)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Идентификатор отгрузки
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <pre>
   * Идентификатор отгрузки
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <pre>
   * Это onDemand ? true - да, false - нет
   * </pre>
   *
   * <code>bool is_ondemand = 2;</code>
   * @return The isOndemand.
   */
  boolean getIsOndemand();

  /**
   * <pre>
   * Список продуктов
   * </pre>
   *
   * <code>repeated .shippingcalc.ProductRequest products = 3;</code>
   */
  java.util.List<shippingcalc.ProductRequest> 
      getProductsList();
  /**
   * <pre>
   * Список продуктов
   * </pre>
   *
   * <code>repeated .shippingcalc.ProductRequest products = 3;</code>
   */
  shippingcalc.ProductRequest getProducts(int index);
  /**
   * <pre>
   * Список продуктов
   * </pre>
   *
   * <code>repeated .shippingcalc.ProductRequest products = 3;</code>
   */
  int getProductsCount();
  /**
   * <pre>
   * Список продуктов
   * </pre>
   *
   * <code>repeated .shippingcalc.ProductRequest products = 3;</code>
   */
  java.util.List<? extends shippingcalc.ProductRequestOrBuilder> 
      getProductsOrBuilderList();
  /**
   * <pre>
   * Список продуктов
   * </pre>
   *
   * <code>repeated .shippingcalc.ProductRequest products = 3;</code>
   */
  shippingcalc.ProductRequestOrBuilder getProductsOrBuilder(
      int index);

  /**
   * <pre>
   * Вес
   * </pre>
   *
   * <code>uint64 weight = 4;</code>
   * @return The weight.
   */
  long getWeight();

  /**
   * <pre>
   * Кол-во штук товаров (сумма quantity у всех products)
   * </pre>
   *
   * <code>uint32 items_count = 5;</code>
   * @return The itemsCount.
   */
  int getItemsCount();

  /**
   * <pre>
   * Цена в копейках
   * </pre>
   *
   * <code>uint64 price = 6;</code>
   * @return The price.
   */
  long getPrice();

  /**
   * <pre>
   * Идентификатор магазина
   * </pre>
   *
   * <code>string store_id = 7;</code>
   * @return The storeId.
   */
  java.lang.String getStoreId();
  /**
   * <pre>
   * Идентификатор магазина
   * </pre>
   *
   * <code>string store_id = 7;</code>
   * @return The bytes for storeId.
   */
  com.google.protobuf.ByteString
      getStoreIdBytes();

  /**
   * <pre>
   * Статус
   * </pre>
   *
   * <code>string status = 8;</code>
   * @return The status.
   */
  java.lang.String getStatus();
  /**
   * <pre>
   * Статус
   * </pre>
   *
   * <code>string status = 8;</code>
   * @return The bytes for status.
   */
  com.google.protobuf.ByteString
      getStatusBytes();

  /**
   * <pre>
   * Регион
   * </pre>
   *
   * <code>uint64 region_id = 9;</code>
   * @return The regionId.
   */
  long getRegionId();

  /**
   * <pre>
   * Наценка слота доставки в копейках
   * </pre>
   *
   * <code>uint64 surge_delivery_window_addition = 10;</code>
   * @return The surgeDeliveryWindowAddition.
   */
  long getSurgeDeliveryWindowAddition();

  /**
   * <pre>
   * координаты магазина
   * </pre>
   *
   * <code>float lat = 11;</code>
   * @return The lat.
   */
  float getLat();

  /**
   * <code>float lon = 12;</code>
   * @return The lon.
   */
  float getLon();

  /**
   * <pre>
   * Идентификатор ритейлера
   * </pre>
   *
   * <code>uint64 retailer_id = 13;</code>
   * @return The retailerId.
   */
  long getRetailerId();
}
