syntax = "proto3";

import "google/protobuf/timestamp.proto";

package shelf;

option go_package = "gitlab.sbermarket.tech/paas/content/catalog/pkg/server/grpc/shelf";

service ShelfService {
	rpc GetShelfByCategoryID(GetShelfByCategoryIDRequest) returns (GetShelfByCategoryIDResponse);
	rpc FlushCategoryFacetsCache(Empty) returns (Empty);
	rpc UpdateCategories(Empty) returns (Empty);
}

message GetShelfByCategoryIDRequest {
	string category_id = 1;
	int64 products_limit = 2;
	string store_id = 3;
	string tenant_id = 4;
	DisplayAttributes display_attributes = 5;
}

message DisplayAttributes {
	repeated string keys = 1;
	repeated string flags = 2;
}

message GetShelfByCategoryIDResponse {
	repeated ShelfCategory categories = 1;
	repeated Shelf shelves = 2;
}

message Category {
	string id = 1;
	string name = 2;
}

message ShelfCategory {
	string id = 1;
	string name = 2;
	bool has_children = 3;
}

message Shelf {
	string category_id = 1;
	string category_name = 2;
	string category_permalink = 3;
	int64 product_count = 4;
	repeated Product products = 5;
}

enum Status {
	DISABLE = 0;
	ENABLE = 1;
}

enum ValueType {
	STRING = 0;
	INTEGER = 1;
	DOUBLE = 2;
	BOOL = 3;
	DATETIME = 4;
	IMAGE = 5;
}

enum Pricer {
	PER_ITEM = 0;  // за штуку
	PER_ITEMS_PACKAGE = 1;  // за упаковку
	PER_WEIGHT_PACKAGE = 2;  // весовой фасованный
	PER_WEIGHT = 3;  // весовой, не фасованный
}

message Data {
	string key = 1;
	ValueType type = 2;
	bool is_multi_value = 3;
	repeated string values = 4;
}

message Attribute {
	string key = 1;
	string name = 2;
	string dictionary_key = 3;
	ValueType type = 4;
	bool is_multi_value = 5;
	map<string, bool> flags = 6;
	repeated Data attribute_data = 7;
	repeated AttributeValue values = 8;
}

message AttributeValue {
	string value = 1;
	repeated Data value_data = 2;
}

message Product {
	int64 sku = 1;
	string name = 2;
	repeated Category categories = 3;
	repeated Attribute attributes = 4;
	Stock stock = 5;
	Price price = 6;
	Offer offer = 7;
	Status status = 8;
}

message Stock {
	double stock = 1;
	repeated Data stock_data = 2;
	Status status = 3;
}

message Price {
	double price = 1;
	repeated Data price_data = 2;
	Status status = 3;
}

message Offer {
	Pricer pricer = 1;
	repeated Data offer_data = 2;
	Status status = 3;
	string retailer_id = 4;
	string retailer_sku = 5;
}

message Empty{}
