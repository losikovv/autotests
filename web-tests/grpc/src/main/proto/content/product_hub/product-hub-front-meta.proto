syntax = "proto3";

package product_hub_front_meta;

option go_package = "gitlab.sbermarket.tech/paas/content/product-hub/pkg/server/grpc/product-hub-front-meta";

service ProductHubFrontMeta {
  rpc GetAllCategories(GetAllCategoriesRequest) returns (GetAllCategoriesResponse);
  rpc GetAllCategoriesWithStores(GetAllCategoriesWithStoresRequest) returns (GetAllCategoriesWithStoresResponse);
  rpc GetCategoriesByCategoryIDs(GetCategoriesByCategoryIDsRequest) returns (GetCategoriesByCategoryIDsResponse);
  rpc GetCategoryFiltersByCategoryIDs(GetCategoryFiltersByCategoryIDsRequest) returns (GetCategoryFiltersByCategoryIDsResponse);
  rpc GetAttributesByKeys(GetAttributesByKeysRequest) returns (GetAttributesByKeysResponse);
  rpc GetAllAttributes(GetAllAttributesRequest) returns (GetAllAttributesResponse);
  rpc GetAllDictionaries(GetAllDictionariesRequest) returns (GetAllDictionariesResponse);
  rpc GetAllDictionaryValues(GetAllDictionaryValuesRequest) returns (GetAllDictionaryValuesResponse);
  rpc GetRetailerStores(GetRetailerStoresRequest) returns (GetRetailerStoresResponse);
}

message GetAllCategoriesRequest{
  int64 limit = 1;
  int64 offset = 2;
}

message GetAllCategoriesResponse {
  repeated Category categories = 1;
}

message GetAllCategoriesWithStoresRequest {
  int64 limit = 1;
  int64 offset = 2;
}

message GetAllCategoriesWithStoresResponse {
  repeated CategoryWithStores categories = 1;
}

message GetCategoriesByCategoryIDsRequest {
  repeated string category_ids = 1;
}

message GetCategoriesByCategoryIDsResponse {
  repeated Category categories = 1;
}

message GetCategoryFiltersByCategoryIDsRequest {
  repeated string category_ids = 1;
}

message GetCategoryFiltersByCategoryIDsResponse {
  repeated CategoryFilter CategoryFilters = 1;
}

message GetAttributesByKeysRequest {
  repeated string attribute_keys = 1;
}

message GetAttributesByKeysResponse {
  repeated Attribute attributes = 1;
}

message GetAllAttributesRequest {
  int64 limit = 1;
  int64 offset = 2;
}

message GetAllAttributesResponse {
  repeated Attribute attributes = 1;
}

message GetAllDictionariesRequest {
  int64 limit = 1;
  int64 offset = 2;
}

message GetAllDictionariesResponse {
  repeated Dictionary dictionaries = 1;
}

message GetAllDictionaryValuesRequest {
  string dictionary_key = 1;
  int64 limit = 2;
  int64 offset = 3;
}

message GetAllDictionaryValuesResponse {
  repeated DictionaryValue dictionary_values = 1;
}

message GetRetailerStoresRequest {
  repeated string retailer_ids = 1;
}

message GetRetailerStoresResponse {
  repeated RetailerStores retailer_stores = 1;
}

enum ValueType {
  STRING = 0;
  INTEGER = 1;
  DOUBLE = 2;
  BOOL = 3;
  DATETIME = 4;
  IMAGE = 5;
}

enum Status {
  DISABLE = 0;
  ENABLE = 1;
}

message Data {
  string key = 1;
  ValueType type = 2;
  bool is_multi_value = 3;
  repeated string values = 4;
}

message Category {
  string id = 1;
  string name = 2;
  string parent_id = 3;
  repeated string retailer_ids = 4;
  repeated Data category_data = 5;
  repeated string tenant_ids = 6;
  Status status = 7;
  string updated_at = 8;
}

message CategoryWithStores {
  string id = 1;
  string name = 2;
  string parent_id = 3;
  repeated RetailerStores stores = 4;
  repeated Data category_data = 5;
  repeated string tenant_ids = 6;
  Status status = 7;
  string updated_at = 8;
}

message RetailerStores {
  string retailer_id = 1;
  repeated string store_ids = 2;
}

message CategoryFilter {
  string category_id = 1;
  repeated string attribute_keys = 2;
  string updated_at = 3;
}

message Attribute {
  string key = 1;
  string dictionary_key = 2;
  string name = 3;
  ValueType type = 4;
  bool is_multi_value = 5;
  map<string, bool> flags = 6;
  repeated Data attribute_data = 7;
  string updated_at = 8;
}

message Dictionary {
  string key = 1;
  string name = 2;
  ValueType type = 3;
  string updated_at = 4;
}

message DictionaryValue {
  string id = 1;
  string value = 2;
  repeated Data value_data = 3;
  string updated_at = 4;
  repeated AdditionalDictionaryValue additional_dictionary_values = 5;
}

message AdditionalDictionaryValue {
  string id = 1;
  string dictionary_key = 2;
  string value = 3;
  repeated Data value_data = 4;
}
