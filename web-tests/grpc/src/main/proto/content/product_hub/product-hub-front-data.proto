syntax = "proto3";

package product_hub_front_data;

option go_package = "gitlab.sbermarket.tech/paas/content/product-hub/pkg/server/grpc/product-hub-front-data";

service ProductHubFrontData {
  rpc GetProductsBySKU(GetProductsBySKURequest) returns (GetProductsBySKUResponse);
  rpc GetProductsWithOfferBySKU(GetProductsWithOfferBySKURequest) returns (GetProductsWithOfferBySKUResponse);
  rpc GetProductsWithOfferByOfferIDs(GetProductsWithOfferByOfferIDsRequest) returns (GetProductsWithOfferByOfferIDsResponse);
  rpc GetProductsByEAN(GetProductsByEANRequest) returns (GetProductsByEANResponse);
  rpc GetProductsWithOfferByEAN(GetProductsWithOfferByEANRequest) returns (GetProductsWithOfferByEANResponse);
  rpc GetProductsByPermalink(GetProductsByPermalinkRequest) returns (GetProductsByPermalinkResponse);
  rpc GetProductsWithOfferByPermalink(GetProductsWithOfferByPermalinkRequest) returns (GetProductsWithOfferByPermalinkResponse);
  rpc GetOffersBySKUANDStoreID(GetOffersBySKUANDStoreIDRequest) returns (GetOffersBySKUANDStoreIDResponse);
  rpc GetStocks(GetStocksRequest) returns (GetStocksResponse);
  rpc GetOffers(GetOffersRequest) returns (GetOffersResponse);
  rpc GetPrices(GetPricesRequest) returns (GetPricesResponse);
}

message GetProductsWithOfferBySKURequest {
  string store_id = 1;
  string tenant_id = 2;
  repeated int64 sku = 3;
  DisplayAttributes display_attributes = 4;
}

message GetProductsBySKURequest {
  repeated int64 sku = 1;
  DisplayAttributes display_attributes = 2;
}

message GetProductsByEANRequest {
  repeated string ean = 1;
  DisplayAttributes display_attributes = 2;
}

message GetProductsWithOfferByEANRequest {
  string store_id = 1;
  string tenant_id = 2;
  repeated string ean = 3;
  DisplayAttributes display_attributes = 4;
}

message DisplayAttributes {
  repeated string keys = 1;
  repeated string flags = 2;
}

message GetProductsWithOfferBySKUResponse {
  repeated ProductWithOffer products_with_offer = 1;
}

message GetProductsBySKUResponse {
  repeated Product products = 1;
}

message GetProductsWithOfferByEANResponse {
  repeated ProductWithOffer products_with_offer = 1;
  repeated EANtoSKU ean_to_sku = 2;
}

message GetProductsByEANResponse {
  repeated Product products = 1;
  repeated EANtoSKU ean_to_sku = 2;
}

message EANtoSKU{
  string ean = 1;
  int64 sku = 2;
}

message GetStocksRequest {
  message Stock {
    int64 sku = 1;
    string store_id = 2;
  }
  repeated Stock stocks = 1;
}

message GetStocksResponse {
  repeated StockWithSKU stocks = 1;
}

message StockWithSKU {
  int64 sku = 1;
  string store_id = 2;
  string retailer_id = 3;
  string retailer_sku = 4;
  double stock = 5;
  repeated Data stock_data = 6;
  Status status = 7;
  string updated_at = 8;
}

message GetOffersBySKUANDStoreIDRequest {
  message Offer {
    int64 sku = 1;
    string store_id = 2;
  }
  repeated Offer offers = 1;
}

message GetOffersBySKUANDStoreIDResponse {
  repeated OfferWithSKUANDStoreID offers = 1;
}

message OfferWithSKUANDStoreID {
  int64 sku = 1;
  string retailer_id = 2;
  string retailer_sku = 3;
  Pricer pricer = 4;
  repeated Data offer_data = 5;
  string updated_at = 6;
  string store_id = 7;
  Status status = 8;
}

message GetOffersRequest {
  message Offer {
    string retailer_sku = 1;
    string retailer_id = 2;
  }
  repeated Offer offers = 1;
}

message GetOffersResponse {
  repeated OfferWithSKU offers = 1;
}

message OfferWithSKU {
  int64 sku = 1;
  string retailer_id = 2;
  string retailer_sku = 3;
  Pricer pricer = 4;
  repeated Data offer_data = 5;
  string updated_at = 6;
  Status status = 7;
}

message GetPricesRequest {
  message Price {
    int64 sku = 1;
    string store_id = 2;
    string tenant_id = 3;
  }
  repeated Price prices = 1;
}

message GetPricesResponse {
  repeated PriceWithSKU prices = 1;
}

message GetProductsWithOfferByOfferIDsRequest {
  string tenant_id = 1;
  repeated string offer_ids = 2;
  DisplayAttributes display_attributes = 3;
}

message GetProductsWithOfferByOfferIDsResponse {
  string store_id = 1;
  repeated ProductWithOffer products_with_offer = 2;
}

message PriceWithSKU {
  int64 sku = 1;
  string store_id = 2;
  string tenant_id = 3;
  double price = 4;
  repeated Data price_data = 5;
  Status status = 6;
  string updated_at = 7;
}

// sku+store_id+tenant_id = unique ==> optional Stock stock = 5; && optional Price price = 6; && optional Offer offer
message ProductWithOffer {
  int64 sku = 1;
  string name = 2;
  repeated Category categories = 3;
  repeated Attribute attributes = 4;
  optional Stock stock = 5;
  optional Price price = 6;
  optional Offer offer = 7;
  Status status = 8;
  string updated_at = 9;
  Active active = 10;
  string active_description = 11;
}

message Product {
  int64 sku = 1;
  string name = 2;
  repeated Category categories = 3;
  repeated Attribute attributes = 4;
  Status status = 5;
  string updated_at = 6;
}

message GetProductsByPermalinkRequest {
  repeated string permalink = 1;
  DisplayAttributes display_attributes = 2;
}

message GetProductsWithOfferByPermalinkRequest {
  string store_id = 1;
  string tenant_id = 2;
  repeated string permalink = 3;
  DisplayAttributes display_attributes = 4;
}

message GetProductsWithOfferByPermalinkResponse {
  repeated ProductWithOffer products_with_offer = 1;
}

message GetProductsByPermalinkResponse {
  repeated Product products = 1;
}

enum Status {
  DISABLE = 0;
  ENABLE = 1;
  DELETED = 2;
}

enum ValueType {
  STRING = 0;
  INTEGER = 1;
  DOUBLE = 2;
  BOOL = 3;
  DATETIME = 4;
  IMAGE = 5;
}

enum Pricer {
  PER_ITEM = 0;  // за штуку
  PER_ITEMS_PACKAGE = 1;  // за упаковку
  PER_WEIGHT_PACKAGE = 2;  // весовой фасованный
  PER_WEIGHT = 3;  // весовой, не фасованный
}

enum Active {
  INACTIVE = 0;
  ACTIVE = 1;
}

message Data {
  string key = 1;
  ValueType type = 2;
  bool is_multi_value = 3;
  repeated string values = 4;
}

message Category {
  string id = 1;
  string name = 2;
}

message Attribute {
  string key = 1;
  string name = 2;
  string dictionary_key = 3;
  ValueType type = 4;
  bool is_multi_value = 5;
  map<string, bool> flags = 6;
  repeated Data attribute_data = 7;
  repeated AttributeValue values = 8;
}

message AttributeValue {
  string value = 1;
  repeated Data value_data = 2;
  string dictionary_value_id = 3;
}

message Stock {
  string retailer_id = 2;
  string retailer_sku = 3;
  double stock = 4;
  repeated Data stock_data = 5;
  Status status = 6;
  string updated_at = 7;
}

message Price {
  double price = 3;
  repeated Data price_data = 4;
  Status status = 5;
  string updated_at = 6;
}

message Offer {
  Pricer pricer = 1;
  repeated Data offer_data = 2;
  Status status = 3;
  int64 offer_id = 4 [deprecated = true];
  string retailer_id = 5;
  string retailer_sku = 6;
  string updated_at = 7;
}