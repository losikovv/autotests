syntax = "proto3";

package shifts;

option go_package = "gitlab.sbmt.io/paas/content/operations/shifts/pkg/server/grpc/shifts";

import "google/protobuf/timestamp.proto";

message PlaningPeriodsImport {
	// Идентификатор импорта, чтобы избегать заливки дублированных 
	// данных по техническим причинам
	string id = 1;
	// Дата и время импорта. Формат значения RFC 3339
	// Пример данных: 2021-05-01T19:00:00+03:00
	string sent_at = 2;
	// Массив объектов с импортируемыми плановыми периодами
	repeated PlanningPeriodItem planning_periods = 3;
}

message PlanningPeriodItem {
	// Зона планирования, в которой предполагается работа партнера.
	// В данный момент зона планирования эквивалентна территории доставки.
	uint32 planning_area_id = 1;
	// Роль партнера, для которой создается плановый период.
	// В данный момент в данном поле могут приняты следующие значения:
	// * driver - курьер
	// * shopper - сборщик
	// * universal - универсал
	string role = 2;
	// Дата и время начала планового периода. Формат значения RFC 3339
	// Пример данных: 2021-05-01T19:00:00+03:00
	string started_at = 3;
	// Дата и время окончания планового периода. Формат значения RFC 3339
	// Пример данных: 2021-05-01T20:00:00+03:00
	string ended_at = 4;
	// Количество партнеров в плановом периоде, которому гарантирована оплата.
	uint32 peoples_count = 5;
	// Базовая гарантированная оплата - количество рублей в час, которые партнер 
	// гарантированно получит за определенный час работы в смене.
	float base_guaranteed_payroll = 6;
	// Прогнозируемая базовая оплата - прогнозируемая оплата, которую партнер может 
	// получить за смену (включает гарантированную оплату)
	float base_predicted_payroll = 7;
	// Признак планового периода, показывающий что данные период является периодом повышенного 
	// спроса и что в нем применяется повышенный коэффициент оплаты
	bool surged = 8;
	// Список идентификаторов магазинов. Если список заполнен, то в рамках смены заказы поступают 
	// только из указанных магазинов, если пуст, то со всех магазинов, доступных сервису диспетчеризации заказов 
	repeated uint32 mapped_shops = 9;
	// Признак активности планового периода
	bool is_active = 10;
	// Магазин для плановой доставки
	uint32 store_id = 11;
	// Объект с базовыми гарантированными оплатами по различным ролям - количество рублей в час, которые партнер 
	// гарантированно получит за определенный час работы в смене.
	map<string, float> guaranteed_payroll = 12;
	// Объект с прогнозируемой базовой оплатой по различным ролям - прогнозируемая оплата, которую партнер может 
	// получить за смену (включает гарантированную оплату)
	map<string, float> predicted_payroll = 13;
	// Глобальное время публикации UTC планового периода для партнера 
	google.protobuf.Timestamp published_time = 14;
	// Объект с тегом и временем публикации планового периода для партнера
	// Пример данных: {"good_guy": "2021-05-01T19:00:00+03:00"}
	map<string, string> published_times = 15;
	// Предполагаемое количество партнеров в плановом периоде, которым гарантирована оплата.
	uint32 peoples_count_predicted = 16;
}
