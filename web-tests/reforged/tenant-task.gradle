task metroSmokeReforged(type: Test){
    useTestNG() {
        testLogging.showStandardStreams = true
        useDefaultListeners = true
        suites 'src/test/resources/suite/smoke/metro.xml'
        includeGroups 'metro-smoke'
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }
    }
}

task metroAcceptanceReforged(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        useDefaultListeners = true
        suites 'src/test/resources/suite/smoke/metro.xml'
        includeGroups 'metro-acceptance'
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }
    }
}

task metroRegressionReforged(type: Test){
    useTestNG() {
        testLogging.showStandardStreams = true
        useDefaultListeners = true
        suites 'src/test/resources/suite/regress/metro.xml'
        includeGroups 'metro-regression'
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }
    }
}

task lentaSmokeReforged(type: Test){
    useTestNG() {
        testLogging.showStandardStreams = true
        useDefaultListeners = true
        suites 'src/test/resources/suite/smoke/stf.xml'
        includeGroups 'lenta-smoke'
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }
    }
}

task lentaAcceptanceReforged(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        useDefaultListeners = true
        suites 'src/test/resources/suite/smoke/stf.xml'
        includeGroups 'lenta-acceptance'
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }
    }
}

task lentaRegressionReforged(type: Test){
    useTestNG() {
        testLogging.showStandardStreams = true
        useDefaultListeners = true
        suites 'src/test/resources/suite/regress/stf.xml'
        includeGroups 'lenta-regression'
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }
    }
}