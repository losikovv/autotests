task apiZones(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        useDefaultListeners = true
        suites 'src/test/resources/api-suite.xml'
        includeGroups 'api-zones'
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }
    }
    if (project.hasProperty('env')) {
        systemProperty 'env',"${env}"
    }
    if (project.hasProperty('qase')) {
        systemProperty 'qase', "${qase}"
    }
}

task apiShopperSmoke(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        useDefaultListeners = true
        suites 'src/test/resources/api-suite.xml'
        includeGroups 'api-shopper-smoke'
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }
    }
    if (project.hasProperty('env')) {
        systemProperty 'env',"${env}"
    }
    if (project.hasProperty('qase')) {
        systemProperty 'qase', "${qase}"
        systemProperty 'qase.plan.id', 4
    }
}

task apiSmoke(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        useDefaultListeners = true
        suites 'src/test/resources/api-suite.xml'
        includeGroups 'api-v2-smoke', 'api-shopper-smoke'
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }
    }
    if (project.hasProperty('env')) {
        systemProperty 'env',"${env}"
    }
    if (project.hasProperty('qase')) {
        systemProperty 'qase', "${qase}"
    }
}

task apiShopperRegress(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        useDefaultListeners = true
        suites 'src/test/resources/api-suite.xml'
        includeGroups 'api-shopper-smoke', 'api-shopper-regress'
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }
    }
    if (project.hasProperty('env')) {
        systemProperty 'env',"${env}"
    }
    if (project.hasProperty('qase')) {
        systemProperty 'qase', "${qase}"
        systemProperty 'qase.plan.id', 2
    }
}

task apiRegress(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        useDefaultListeners = true
        suites 'src/test/resources/api-suite.xml'
        includeGroups 'api-v2-smoke', 'api-v2-regress', 'api-shopper-smoke', 'api-shopper-regress'
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }
    }
    if (project.hasProperty('env')) {
        systemProperty 'env',"${env}"
    }
    if (project.hasProperty('qase')) {
        systemProperty 'qase', "${qase}"
    }
}

task apiV2Regress(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        useDefaultListeners = true
        suites 'src/test/resources/api-suite.xml'
        includeGroups 'api-v2-smoke', 'api-v2-regress'
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }
    }
    if (project.hasProperty('env')) {
        systemProperty 'env',"${env}"
    }
    if (project.hasProperty('qase')) {
        systemProperty 'qase', "${qase}"
        systemProperty 'qase.plan.id', 1
    }
}

task apiV2Smoke(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        useDefaultListeners = true
        suites 'src/test/resources/api-suite.xml'
        includeGroups 'api-v2-smoke'
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }
    }
    if (project.hasProperty('env')) {
        systemProperty 'env',"${env}"
    }
    if (project.hasProperty('qase')) {
        systemProperty 'qase', "${qase}"
        systemProperty 'qase.plan.id', 3
    }
}