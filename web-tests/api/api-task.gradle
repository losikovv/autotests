task apiShopperSmoke(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        useDefaultListeners = true
        suites 'src/test/resources/suite/api-shopper.xml'
        includeGroups 'api-shopper-smoke'
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }
    }
    systemProperty 'qase.Project', 'SHAPI'
    systemProperty 'qase.Title', 'Shopper API Smoke'
}

task apiShopperRegress(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        useDefaultListeners = true
        suites 'src/test/resources/suite/api-shopper.xml'
        includeGroups 'api-shopper-smoke', 'api-shopper-regress'
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }
    }
    systemProperty 'qase.Project', 'SHAPI'
    systemProperty 'qase.Title', 'Shopper API Regress'
}

task apiInstamartRegress(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        useDefaultListeners = true
        suites 'src/test/resources/suite/api-instamart.xml'
        includeGroups 'api-instamart-smoke', 'api-instamart-regress'
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }
    }
    boolean isCiServer = System.getenv().containsKey("CI")
    if (isCiServer) {
        retry {
            // Максимальное количество повторов
            maxRetries = 1
            // Количество тестов при падении которых не запускается ретрай
            maxFailures = 20
            // true тест падает с ошибкой при удачном повторе
            failOnPassedAfterRetry = false
        }
    }
    systemProperty 'qase.Project', 'INAPI'
    systemProperty 'qase.Title', 'Instamart API Regress'
}

task apiInstamartSmoke(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        useDefaultListeners = true
        suites 'src/test/resources/suite/api-instamart.xml'
        includeGroups 'api-instamart-smoke'
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }
    }
    systemProperty 'qase.Project', 'INAPI'
    systemProperty 'qase.Title', 'Instamart API Smoke'
}

task apiv3Smoke(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        useDefaultListeners = true
        suites 'src/test/resources/suite/api-v3.xml'
        includeGroups 'api-instamart-smoke'
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }
    }

        systemProperty 'qase.Project', 'INAPI'
        systemProperty 'qase.Title', 'Smoke endpoints Api v3'
}

task apiRetailerE2E(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        useDefaultListeners = true
        suites 'src/test/resources/suite/api-retailers.xml'
        includeGroups 'api-retailer'
        systemProperty 'env',"sbermarket-production"
        systemProperty 'qase', "false"
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }
    }
}

task apiInstamartProduction(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        useDefaultListeners = true
        suites 'src/test/resources/suite/api-instamart.xml'
        includeGroups 'api-instamart-prod'
        systemProperty 'env',"sbermarket-production"
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }
    }
    systemProperty 'qase.Project', 'INAPI'
    systemProperty 'qase.Title', 'Instamart API Regress'
}

task apiShopperProduction(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        useDefaultListeners = true
        suites 'src/test/resources/suite/api-shopper.xml'
        includeGroups 'api-shopper-prod'
        systemProperty 'env',"sbermarket-production"
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }
    }
    systemProperty 'qase.Project', 'SHAPI'
    systemProperty 'qase.Title', 'Shopper API Regress'
}

task autoMr(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        useDefaultListeners = true
        suites 'src/test/resources/suite/mr.xml'
        includeGroups 'MRAutoCheck'
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }
    }
}

task apiSurge(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        useDefaultListeners = true
        suites 'src/test/resources/suite/surge-api.xml'
        includeGroups 'surge-api'
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }
    }
    systemProperty 'qase.Project', 'SURGE'
    systemProperty 'qase.Title', 'Surge API Regress'
}

task localRun(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        useDefaultListeners = true
        options {
            listeners.add("ru.instamart.api.listener.ApiExecutionListener")
            listeners.add("ru.instamart.api.listener.ApiListener")
        }
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }
    }
}

task qaseActualize(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        useDefaultListeners = true
        suites 'src/test/resources/suite/util.xml'
        includeGroups 'qase-actualize'
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }
    }
}
