task apiShopperSmoke(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/api-shopper.xml'
        includeGroups 'api-shopper-smoke'
    }
    environment 'PROJECT_ID', 'SHAPI'
    environment 'TEST_RUN_NAME', 'Shopper API Smoke'
//    systemProperty 'one_session', 'true'
}

task apiShopperRegress(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/api-shopper.xml'
        includeGroups 'api-shopper-smoke', 'api-shopper-regress'
    }
    environment 'PROJECT_ID', 'SHAPI'
    environment 'TEST_RUN_NAME', 'Shopper API Regress'
//    systemProperty 'one_session', 'true'
}

task apiV2InstamartRegress(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/api-v2-instamart.xml'
        includeGroups 'api-instamart-smoke', 'api-instamart-regress'
    }
    boolean isCiServer = System.getenv().containsKey("CI")
    if (isCiServer) {
        retry {
            // Максимальное количество повторов
            maxRetries = 1
            // Количество тестов при падении которых не запускается ретрай
            maxFailures = 20
            // true тест падает с ошибкой при удачном повторе
            failOnPassedAfterRetry = false
        }
    }
    environment 'PROJECT_ID', 'INAPI'
    environment 'TEST_RUN_NAME', 'Instamart API Regress'
}

task apiV1InstamartRegress(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/api-v1-instamart.xml'
        includeGroups 'api-instamart-smoke', 'api-instamart-regress'
    }
    boolean isCiServer = System.getenv().containsKey("CI")
    if (isCiServer) {
        retry {
            // Максимальное количество повторов
            maxRetries = 1
            // Количество тестов при падении которых не запускается ретрай
            maxFailures = 20
            // true тест падает с ошибкой при удачном повторе
            failOnPassedAfterRetry = false
        }
    }
    environment 'PROJECT_ID', 'INAPI'
    environment 'TEST_RUN_NAME', 'Instamart API Regress'
}

task apiV3InstamartRegress(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/api-v3-instamart.xml'
        includeGroups 'api-instamart-smoke', 'api-instamart-regress'
    }
    boolean isCiServer = System.getenv().containsKey("CI")
    if (isCiServer) {
        retry {
            // Максимальное количество повторов
            maxRetries = 1
            // Количество тестов при падении которых не запускается ретрай
            maxFailures = 20
            // true тест падает с ошибкой при удачном повторе
            failOnPassedAfterRetry = false
        }
    }
    environment 'PROJECT_ID', 'INAPI'
    environment 'TEST_RUN_NAME', 'Instamart API Regress'
}

task apiInstamartSmoke(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/api-all.xml'
        includeGroups 'api-instamart-smoke'
    }
    environment 'PROJECT_ID', 'INAPI'
    environment 'TEST_RUN_NAME', 'Instamart API Smoke'
}

task apiV2BFF(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/all.xml'
        includeGroups 'api-bff'
    }
    environment 'URL_STF_BACKEND', 'stf-kraken.k-stage.sbermarket.tech'
    systemProperty 'bff', 'true'
    environment 'PROJECT_ID', 'INAPI'
    environment 'TEST_RUN_NAME', 'BFF API v2'
}

task apiv3Smoke(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/api-v3.xml'
        includeGroups 'api-instamart-smoke'
    }
    environment 'PROJECT_ID', 'INAPI'
    environment 'TEST_RUN_NAME', 'Smoke endpoints Api v3'
}

task apiV3Notifications(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/api-v3-notifications.xml'
        includeGroups 'api-instamart-smoke', 'api-instamart-regress'
    }
    environment 'P_ENV', "sbermarket-staging_mannschaft"
    environment 'PROJECT_ID', 'INAPI'
    environment 'TEST_RUN_NAME', 'API v3 Notifications'
}

task apiRetailerE2E(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/api-retailers.xml'
        includeGroups 'api-retailer'
    }
    environment 'P_ENV', "sbermarket-production"
    environment 'DEFAULT_SID', '18'
}

task apiInstamartProduction(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/api-instamart-prod.xml'
        includeGroups 'api-instamart-prod'
    }
    environment 'P_ENV', "sbermarket-production"
    environment 'DEFAULT_SID', '18'
    environment 'PROJECT_ID', 'INAPI'
    environment 'TEST_RUN_NAME', 'Instamart API Regress'
}

task apiShopperProduction(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/api-shopper.xml'
        includeGroups 'api-shopper-prod'
    }
    environment 'P_ENV', "sbermarket-production"
    environment 'DEFAULT_SID', '18'
    environment 'PROJECT_ID', 'SHAPI'
    environment 'TEST_RUN_NAME', 'Shopper API Regress'
    systemProperty 'one_session', 'true'
}

task apiScango(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/api-scanandgo.xml'
        includeGroups 'api-sg'
    }
    environment 'P_ENV', "sbermarket-scango"
    environment 'PROJECT_ID', 'INAPI'
    environment 'TEST_RUN_NAME', 'Instamart API Scan&Go'
}

task apiSelfFee(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/api-selffee.xml'
        includeGroups 'api-selffee'
    }
    environment 'P_ENV', "hr_ops_selffee-custom"
    environment 'PROJECT_ID', 'FNS'
    environment 'TEST_RUN_NAME', 'HR OPS. Self-Fee'
}