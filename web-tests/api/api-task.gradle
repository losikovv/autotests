task apiShopperSmoke(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/api-shopper.xml'
        includeGroups 'api-shopper-smoke'
    }
    systemProperty 'qase.Project', 'SHAPI'
    systemProperty 'qase.Title', 'Shopper API Smoke'
//    systemProperty 'one_session', 'true'
}

task apiShopperRegress(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/api-shopper.xml'
        includeGroups 'api-shopper-smoke', 'api-shopper-regress'
    }
    systemProperty 'qase.Project', 'SHAPI'
    systemProperty 'qase.Title', 'Shopper API Regress'
//    systemProperty 'one_session', 'true'
}

task apiV2InstamartRegress(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/api-v2-instamart.xml'
        includeGroups 'api-instamart-smoke', 'api-instamart-regress'
    }
    boolean isCiServer = System.getenv().containsKey("CI")
    if (isCiServer) {
        retry {
            // Максимальное количество повторов
            maxRetries = 1
            // Количество тестов при падении которых не запускается ретрай
            maxFailures = 20
            // true тест падает с ошибкой при удачном повторе
            failOnPassedAfterRetry = false
        }
    }
    systemProperty 'qase.Project', 'INAPI'
    systemProperty 'qase.Title', 'Instamart API Regress'
}

task apiV1InstamartRegress(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/api-v1-instamart.xml'
        includeGroups 'api-instamart-smoke', 'api-instamart-regress'
    }
    boolean isCiServer = System.getenv().containsKey("CI")
    if (isCiServer) {
        retry {
            // Максимальное количество повторов
            maxRetries = 1
            // Количество тестов при падении которых не запускается ретрай
            maxFailures = 20
            // true тест падает с ошибкой при удачном повторе
            failOnPassedAfterRetry = false
        }
    }
    systemProperty 'qase.Project', 'INAPI'
    systemProperty 'qase.Title', 'Instamart API Regress'
}

task apiV3InstamartRegress(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/api-v3-instamart.xml'
        includeGroups 'api-instamart-smoke', 'api-instamart-regress'
    }
    systemProperty 'qase.Project', 'INAPI'
    systemProperty 'qase.Title', 'Instamart API Regress'
}

task apiInstamartSmoke(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/api-all.xml'
        includeGroups 'api-instamart-smoke'
    }
    systemProperty 'qase.Project', 'INAPI'
    systemProperty 'qase.Title', 'Instamart API Smoke'
}

task apiv3Smoke(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/api-v3.xml'
        includeGroups 'api-instamart-smoke'
    }
    systemProperty 'qase.Project', 'INAPI'
    systemProperty 'qase.Title', 'Smoke endpoints Api v3'
}

task apiV3Notifications(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/api-v3-notifications.xml'
        includeGroups 'api-instamart-smoke', 'api-instamart-regress'
        systemProperty 'env',"sbermarket-staging_mannschaft"
    }

    systemProperty 'qase.Project', 'INAPI'
    systemProperty 'qase.Title', 'API v3 Notifications'
}

task apiRetailerE2E(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/api-retailers.xml'
        includeGroups 'api-retailer'
        systemProperty 'env',"sbermarket-production"
        systemProperty 'qase', "false"
    }
}

task apiInstamartProduction(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/api-instamart-prod.xml'
        includeGroups 'api-instamart-prod'
        systemProperty 'env',"sbermarket-production"
    }
    systemProperty 'qase.Project', 'INAPI'
    systemProperty 'qase.Title', 'Instamart API Regress'
}

task apiShopperProduction(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/api-shopper.xml'
        includeGroups 'api-shopper-prod'
        systemProperty 'env',"sbermarket-production"
    }
    systemProperty 'qase.Project', 'SHAPI'
    systemProperty 'qase.Title', 'Shopper API Regress'
    systemProperty 'one_session', 'true'
}

task autoMr(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/mr.xml'
        includeGroups 'MRAutoCheck'
    }
}

task apiSurge(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/surge-api.xml'
        includeGroups 'surge-api'
    }
    systemProperty 'qase.Project', 'SURGE'
    systemProperty 'qase.Title', 'Surge API Regress'
}

task apiRisExporter(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/api-ris-exporter.xml'
        includeGroups 'api-ris-exporter'
    }
    systemProperty 'qase.Project', 'PB'
    systemProperty 'qase.Title', 'Ris-Exporter API Regress'
}

task apShftsSmoke(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/api-shifts-smoke.xml'
        includeGroups 'api-shifts'
        systemProperty 'env',"service-shifts"
    }
    systemProperty 'qase.Project', 'ODFS'
    systemProperty 'qase.Title', 'Shifts API Smoke'
    systemProperty 'url_stf', 'stf-6.k-stage.sbermarket.tech'
    systemProperty 'url_shp', 'shp-6.k-stage.sbermarket.tech'
}

task kafkaDispatch(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/dispatch.xml'
        includeGroups 'kafka-instamart-regress'
    }
    systemProperty 'qase.Project', 'DSPTCH'
    systemProperty 'qase.Title', 'On Demand. Dispatch 2.0'
    systemProperty 'url_stf', 'stf-6.k-stage.sbermarket.tech'
    systemProperty 'url_shp', 'shp-6.k-stage.sbermarket.tech'
}

task apiDispatchWorkflow(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/dispatch.xml'
        includeGroups 'dispatch-workflow-regress'
        systemProperty 'env',"service-workflow"
    }
    systemProperty 'qase.Project', 'ODW'
    systemProperty 'qase.Title', 'Dispatch Workflow Regress'
    systemProperty 'url_stf', 'stf-6.k-stage.sbermarket.tech'
    systemProperty 'url_shp', 'shp-6.k-stage.sbermarket.tech'
}

task localRun(type: Test) {
    useTestNG() {
        options {
            listeners.add("ru.instamart.api.listener.ApiExecutionListener")
            listeners.add("ru.instamart.api.listener.ApiListener")
        }
    }
}

task qaseActualize(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/util.xml'
        includeGroups 'qase-actualize'
    }
}

task qaseCleanup(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/util.xml'
        includeGroups 'qase-cleanup'
    }
}

task generateData(type: Test) {
    useTestNG() {
        suites 'src/test/resources/suite/util.xml'
        includeGroups 'generate-data'
    }
}
