tests:ApiInstamart:
  only:
    variables:
      - $TEST_API_INSTAMART == 'true' && $CI_RUN_ALL_JOBS == 'false'
      - $CI_RUN_ALL_JOBS == 'true'
  extends:
    - ".template_api_tests"
    - ".template_run_all_jobs_at_a_time_on_master"
  resource_group: apiInstamart:$URL_STF_BACKEND
  when: manual
  script:
    - echo $URL_STF_BACKEND
    - echo $URL_SHP
    - gradle clean build apiInstamartSmoke
  after_script:
    - if [ '$URL_STF_BACKEND == null || $URL_STF_BACKEND == stf-kraken.k-stage.sbermarket.tech' ]; then ALLURE_POSTFIX="preprod"; else ALLURE_POSTFIX="staging"; fi
    - echo $ALLURE_POSTFIX
    - bash ./report.sh api api-instamart-$ALLURE_POSTFIX-smoke

tests:ApiV2InstamartRegress:
  extends:
    - ".template_api_tests"
    - ".template_schedule"
  resource_group: apiInstamart:$URL_STF_BACKEND
  script:
    - echo $URL_STF_BACKEND
    - echo $URL_SHP
    - gradle clean build apiV2InstamartRegress
  after_script:
    - bash ./clean-directory.sh api api-instamart-preprod-regress
    - bash ./send-files.sh api api-instamart-preprod-regress

tests:ApiV1InstamartRegress:
  extends:
    - ".template_api_ui_tests"
    - ".template_schedule"
  resource_group: apiInstamartUI:$URL_STF_BACKEND
  script:
    - echo $URL_STF_BACKEND
    - echo $URL_SHP
    - gradle clean build apiV1InstamartRegress
  after_script:
    - bash ./send-files.sh api api-instamart-preprod-regress

tests:ApiV3InstamartRegress:
  extends:
    - ".template_api_ui_tests"
    - ".template_schedule"
  resource_group: apiInstamartUI:$URL_STF_BACKEND
  script:
    - echo $URL_STF_BACKEND
    - echo $URL_SHP
    - gradle clean build apiV3InstamartRegress
  after_script:
    - bash ./send-files.sh api api-instamart-preprod-regress

    #tests:preprodApiMetro:
    #  extends:
    #  - ".template_api_tests"
    # - ".template_prod"
    #  resource_group: apiInstamart:$URL_STF_BACKEND
    #  when: manual
    #  script:
    #    - gradle clean build apiInstamartRegress -Penv=metro-preprod
    #  after_script:
  #   - bash ./report.sh api api-metro-preprod-regress

tests:prodApiInstamart:
  extends:
    - ".template_api_tests"
    - ".template_run_all_jobs_at_a_time_on_master"
  when: delayed
  start_in: 6 minutes
  resource_group: apiInstamartProd
  script:
    - gradle clean build apiInstamartProduction
  after_script:
    - bash ./report.sh api api-instamart-production-regress
    - bash ./mattermost.sh api apiInstamartProduction $MATTERMOST_KEY false

tests:prodApiInstamart:schedules:
  extends:
    - ".template_api_tests"
    - ".template_prod"
  resource_group: apiInstamartProd
  script:
    - gradle clean build apiInstamartProduction
  after_script:
    - bash ./report.sh api api-instamart-production-regress
    - bash ./mattermost.sh api apiInstamartProduction $MATTERMOST_KEY false

    #tests:prodApiRetailer:
    #  extends:
    #  - ".template_api_tests"
    #  - ".template_prod"
    #  when: manual
    #  script:
    #    - gradle clean build apiRetailerE2E
    # after_script:
    #  - bash ./report.sh api api-retailer-e2e-production

tests:surge:
  resource_group: testSurge
  only:
    variables:
      - $API_SURGE_ALONE == 'true' && $CI_RUN_ALL_JOBS == 'false'
  extends:
    - ".template_api_tests"
  script:
    - gradle clean build apiSurge
  after_script:
    - bash ./report.sh api api-surge

tests:ris:exporter:
  extends:
    - ".template_api_tests"
  resource_group: testRisExporter
  only:
    variables:
      - $API_RIS_EXPORTER_ALONE == 'true' && $CI_RUN_ALL_JOBS == 'false'
  script:
    - gradle clean build apiRisExporter
  after_script:
    - bash ./report.sh api api-ris-exporter

tests:authorization:schedule:
  resource_group: testAuthorizationService
  only:
    variables:
      - $API_AUTHORIZATION_SERVER_ALONE == 'true' && $CI_RUN_ALL_JOBS == 'false'
  extends:
    - ".template_api_tests"
  script:
    - gradle clean build apiAuthorizationService
  after_script:
    - bash ./report.sh api api-authorization-service

tests:ris:exporter:schedule:
  extends:
    - ".template_api_tests"
    - ".template_schedule"
  stage: tests-api-service
  resource_group: testRisExporter
  script:
    - gradle clean build apiRisExporter
  after_script:
    - bash ./report.sh api api-ris-exporter

tests:api:v3:notifications:
  resource_group: testApiV3Notifications
  only:
    variables:
      - $API_V3_NOTIFICATIONS == 'true' && $CI_RUN_ALL_JOBS == 'false'
  extends:
    - ".template_api_tests"
  script:
    - gradle clean build apiV3Notifications
  after_script:
    - bash ./report.sh api api-v3-notifications

tests:api:v2:bff:
  resource_group: testApiV2BFF
  only:
    variables:
      - $API_V2_BFF == 'true' && $CI_RUN_ALL_JOBS == 'false'
  extends:
    - ".template_api_tests"
  script:
    - gradle clean build apiV2BFF -Pbff_forward=$BFF_FORWARD
  after_script:
    - bash ./report.sh api api-v2-bff

tests:api:scanAndGo:
  resource_group: testApiScanAndGo
  only:
    variables:
      - $API_V2_SCAN_AND_GO == 'true' && $CI_RUN_ALL_JOBS == 'false'
  extends:
    - ".template_api_tests"
  script:
    - gradle clean build apiScanAndGo
  after_script:
    - bash ./report.sh api api-scan-and-go

tests:api:apiSelfFee:
  resource_group: testApiSelfFee
  only:
    variables:
      - $API_V2_SELF_FEE == 'true'
  extends:
    - ".template_api_tests"
  script:
    - gradle clean build apiSelfFee
  after_script:
    - bash ./report.sh api api-self-fee

tests:shadowcat:
  resource_group: testShadowcat
  only:
    variables:
      - $API_SHADOWCAT == 'true' && $CI_RUN_ALL_JOBS == 'false'
  extends:
    - ".template_api_tests"
  script:
    - gradle clean build apiShadowcat
  after_script:
    - bash ./report.sh api api-shadowcat