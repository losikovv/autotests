tests:ApiInstamart:
  only:
    variables:
      - $TEST_API_INSTAMART == 'true' && $CI_RUN_ALL_JOBS == 'false'
      - $CI_RUN_ALL_JOBS == 'true'
  extends:
    - ".template_api_tests"
    - ".template_run_all_jobs_at_a_time_on_master"
  resource_group: apiInstamart:$URL_STF
  script:
    - echo $P_ENV
    - echo $URL_STF
    - echo $URL_SHP
    - gradle clean build apiInstamartSmoke -Penv=$P_ENV -Pqase=true -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL -Purl_stf=$URL_STF -Purl_shp=$URL_SHP
  after_script:
    - if [ $URL_STF == "stf-kraken.k-stage.sbermarket.tech" ]; then ALLURE_POSTFIX="preprod"; else ALLURE_POSTFIX="staging"; fi
    - echo $ALLURE_POSTFIX
    - bash ./report.sh api api-instamart-$ALLURE_POSTFIX-smoke

tests:ApiInstamartRegress:
  extends:
    - ".template_api_tests"
    - ".template_schedule"
  resource_group: apiInstamart:$URL_STF
  script:
    - echo $P_ENV
    - echo $URL_STF
    - echo $URL_SHP
    - gradle clean build apiInstamartRegress -Penv=$P_ENV -Pqase=true -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL -Purl_stf=$URL_STF -Purl_shp=$URL_SHP
  after_script:
    - bash ./clean-directory.sh api api-instamart-preprod-regress
    - bash ./send-files.sh api api-instamart-preprod-regress

tests:ApiV1InstamartRegress:
  extends:
    - ".template_api_ui_tests"
    - ".template_schedule"
  resource_group: apiInstamartUI:$URL_STF
  script:
    - echo $P_ENV
    - echo $URL_STF
    - echo $URL_SHP
    - gradle clean build apiV1InstamartRegress -Penv=$P_ENV -Pqase=true -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL -Purl_stf=$URL_STF -Purl_shp=$URL_SHP
  after_script:
    - bash ./send-files.sh api api-instamart-preprod-regress

tests:ApiV3InstamartRegress:
  extends:
    - ".template_api_ui_tests"
    - ".template_schedule"
  resource_group: apiInstamartUI:$URL_STF
  script:
    - echo $P_ENV
    - echo $URL_STF
    - echo $URL_SHP
    - gradle clean build apiV3InstamartRegress -Penv=$P_ENV -Pqase=true -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL -Purl_stf=$URL_STF -Purl_shp=$URL_SHP
  after_script:
    - bash ./send-files.sh api api-instamart-preprod-regress


tests:ApiInstamartRegress:manual:
  extends:
    - ".template_api_tests"
    - ".template_web"
  resource_group: apiInstamart:$URL_STF
  except:
    variables:
      - $URL_STF =~ /next-stf-preprod.*/ # Исключаем из прогона на стейдже. Только фронт
  when: manual
  script:
    - echo $P_ENV
    - echo $URL_STF
    - echo $URL_SHP
    - gradle clean build apiInstamartRegress -Penv=$P_ENV -Pqase=true -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL -Purl_stf=$URL_STF -Purl_shp=$URL_SHP
  after_script:
    - bash ./report.sh api api-instamart-staging-regress

    #tests:preprodApiMetro:
    #  extends:
    #  - ".template_api_tests"
    # - ".template_prod"
    #  resource_group: apiInstamart:$URL_STF
    #  when: manual
    #  script:
    #    - gradle clean build apiInstamartRegress -Penv=metro-preprod -Pqase=true -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL
    #  after_script:
  #   - bash ./report.sh api api-metro-preprod-regress

tests:prodApiInstamart:
  extends:
    - ".template_api_tests"
    - ".template_prod"
  resource_group: apiInstamartProd
  script:
    - gradle clean build apiInstamartProduction -Pqase=true -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL
  after_script:
    - bash ./report.sh api api-instamart-production-regress

    #tests:prodApiRetailer:
    #  extends:
    #  - ".template_api_tests"
    #  - ".template_prod"
    #  when: manual
    #  script:
    #    - gradle clean build apiRetailerE2E -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL
    # after_script:
    #  - bash ./report.sh api api-retailer-e2e-production

tests:surge:
  resource_group: testSurge
  only:
    variables:
      - $API_SURGE_ALONE == 'true' && $CI_RUN_ALL_JOBS == 'false'
  extends:
    - ".template_api_tests"
  script:
    - gradle clean build apiSurge -Pqase=true -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL
  after_script:
    - bash ./report.sh api api-surge

tests:ris:exporter:
  resource_group: testRisExporter
  only:
    variables:
      - $API_RIS_EXPORTER_ALONE == 'true' && $CI_RUN_ALL_JOBS == 'false'
  extends:
    - ".template_api_tests"
  script:
    - gradle clean build apiRisExporter -Pqase=true -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL
  after_script:
    - bash ./report.sh api api-ris-exporter

tests:ris:exporter:schedule:
  resource_group: testRisExporter
  extends:
    - ".template_api_tests"
    - ".template_schedule"
  script:
    - gradle clean build apiRisExporter -Pqase=true -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL
  after_script:
    - bash ./report.sh api api-ris-exporter

tests:api:v3:notifications:
  resource_group: testApiV3Notifications
  only:
    variables:
      - $API_V3_NOTIFICATIONS == 'true' && $CI_RUN_ALL_JOBS == 'false'
  extends:
    - ".template_api_tests"
  script:
    - gradle clean build apiV3Notifications -Pqase=true -Pkey=$ATST_APP_SECRET_KEY -Ppip_url=$CI_PIPELINE_URL
  after_script:
    - bash ./report.sh api api-v3-notifications
